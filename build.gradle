plugins {
    id 'org.springframework.boot' version '2.7.0'
    id "com.avast.gradle.docker-compose" version "0.13.4"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "idea"
    id "org.flywaydb.flyway" version "7.3.0"
    id "com.diffplug.gradle.spotless" version "4.5.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

apply from: "${rootProject.projectDir}/gradle/integration-test.gradle"
apply from: "${rootProject.projectDir}/gradle/idea.gradle"
apply from: "${rootProject.projectDir}/gradle/docker-compose.gradle"
apply from: "${rootProject.projectDir}/gradle/spotless.gradle"

dependencies {
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    compileOnly('org.mapstruct:mapstruct-processor:1.3.1.Final')
    annotationProcessor('org.mapstruct:mapstruct-processor:1.3.1.Final')
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api"
    )

    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    implementation('org.mapstruct:mapstruct-jdk8:1.3.1.Final')
    implementation('org.flywaydb:flyway-core')
    implementation('org.flywaydb:flyway-mysql')

    implementation("org.apache.commons:commons-collections4:4.4")
    implementation("org.apache.commons:commons-lang3")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.8")
    implementation('com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3')
    implementation("com.diffplug.spotless:spotless-plugin-gradle:3.23.1")

    runtimeOnly('mysql:mysql-connector-java')

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.rest-assured:spring-mock-mvc")
    testImplementation("org.jyaml:jyaml:1.3")
    testImplementation("com.github.database-rider:rider-junit5:1.39.0")
    testImplementation("com.h2database:h2")
}



bootRun {
    args = ["--spring.profiles.active=local"]
    jvmArgs = ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"]
}

wrapper {
    gradleVersion = '6.8'
}

test {
    useJUnitPlatform()
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}